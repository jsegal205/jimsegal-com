/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as WithnavImport } from './routes/_withnav'
import { Route as IndexImport } from './routes/index'
import { Route as WithnavRecipesIndexImport } from './routes/_withnav/recipes/index'
import { Route as WithnavRecipesSlugImport } from './routes/_withnav/recipes/$slug'

// Create/Update Routes

const WithnavRoute = WithnavImport.update({
  id: '/_withnav',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WithnavRecipesIndexRoute = WithnavRecipesIndexImport.update({
  path: '/recipes/',
  getParentRoute: () => WithnavRoute,
} as any)

const WithnavRecipesSlugRoute = WithnavRecipesSlugImport.update({
  path: '/recipes/$slug',
  getParentRoute: () => WithnavRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_withnav': {
      id: '/_withnav'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof WithnavImport
      parentRoute: typeof rootRoute
    }
    '/_withnav/recipes/$slug': {
      id: '/_withnav/recipes/$slug'
      path: '/recipes/$slug'
      fullPath: '/recipes/$slug'
      preLoaderRoute: typeof WithnavRecipesSlugImport
      parentRoute: typeof WithnavImport
    }
    '/_withnav/recipes/': {
      id: '/_withnav/recipes/'
      path: '/recipes'
      fullPath: '/recipes'
      preLoaderRoute: typeof WithnavRecipesIndexImport
      parentRoute: typeof WithnavImport
    }
  }
}

// Create and export the route tree

interface WithnavRouteChildren {
  WithnavRecipesSlugRoute: typeof WithnavRecipesSlugRoute
  WithnavRecipesIndexRoute: typeof WithnavRecipesIndexRoute
}

const WithnavRouteChildren: WithnavRouteChildren = {
  WithnavRecipesSlugRoute: WithnavRecipesSlugRoute,
  WithnavRecipesIndexRoute: WithnavRecipesIndexRoute,
}

const WithnavRouteWithChildren =
  WithnavRoute._addFileChildren(WithnavRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof WithnavRouteWithChildren
  '/recipes/$slug': typeof WithnavRecipesSlugRoute
  '/recipes': typeof WithnavRecipesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof WithnavRouteWithChildren
  '/recipes/$slug': typeof WithnavRecipesSlugRoute
  '/recipes': typeof WithnavRecipesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_withnav': typeof WithnavRouteWithChildren
  '/_withnav/recipes/$slug': typeof WithnavRecipesSlugRoute
  '/_withnav/recipes/': typeof WithnavRecipesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '' | '/recipes/$slug' | '/recipes'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '' | '/recipes/$slug' | '/recipes'
  id:
    | '__root__'
    | '/'
    | '/_withnav'
    | '/_withnav/recipes/$slug'
    | '/_withnav/recipes/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WithnavRoute: typeof WithnavRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WithnavRoute: WithnavRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_withnav"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_withnav": {
      "filePath": "_withnav.tsx",
      "children": [
        "/_withnav/recipes/$slug",
        "/_withnav/recipes/"
      ]
    },
    "/_withnav/recipes/$slug": {
      "filePath": "_withnav/recipes/$slug.tsx",
      "parent": "/_withnav"
    },
    "/_withnav/recipes/": {
      "filePath": "_withnav/recipes/index.tsx",
      "parent": "/_withnav"
    }
  }
}
ROUTE_MANIFEST_END */
